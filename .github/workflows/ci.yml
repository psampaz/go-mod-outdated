name: ci

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
  pull_request:

jobs:
  validate:
    strategy:
      fail-fast: false
      matrix:
        target:
          - lint
          - vendor-validate
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Validate
        uses: docker/bake-action@v1
        with:
          targets: ${{ matrix.target }}

  coverage:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Test
        uses: docker/bake-action@v1
        with:
          targets: test
      -
        name: Upload coverage
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.txt

  e2e:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        go-version:
          - 1.14
          - 1.15
          - 1.16
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      -
        name: Test
        run: |
          go get github.com/mfridman/tparse
          go test -v -race -cover -json ./... | $(go env GOPATH)/bin/tparse -all
      -
        name: Integration
        run: |
          go install
          mkdir hugo
          cp internal/runner/testdata/hugo_0_53_go.mod hugo/go.mod
          cd hugo
          go list -u -m -json all | $(go env GOPATH)/bin/go-mod-outdated

  build:
    runs-on: ubuntu-latest
    needs:
      - validate
      - coverage
    env:
      DOCKERHUB_SLUG: psampaz/go-mod-outdated
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.DOCKERHUB_SLUG }}
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=pr
            type=edge
          labels: |
            org.opencontainers.image.title=go-mod-outdated
            org.opencontainers.image.description=Find outdated dependencies of your Go projects
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build artifacts
        uses: docker/bake-action@v1
        with:
          targets: artifact-all
      -
        name: Move artifacts
        run: |
          mv ./dist/**/* ./dist/
      -
        name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: go-mod-outdated
          path: ./dist/*
          if-no-files-found: error
      -
        name: Build image
        uses: docker/bake-action@v1
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: image-all
          push: ${{ github.event_name != 'pull_request' }}
      -
        name: GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            dist/*.tar.gz
            dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
