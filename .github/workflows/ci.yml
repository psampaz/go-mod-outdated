name: CI Workflow
on: [pull_request]

jobs:
  golangci:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    name: golangci-lint
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.50.1
  docker:
    strategy:
      matrix:
        go-version: [1.20.x]
        platform: [ubuntu-latest]
    name: docker
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - run: |
          docker build -t psampaz/go-mod-outdated .
          go list -u -m -json all | docker run --rm -i  psampaz/go-mod-outdated
  tests:
    strategy:
      matrix:
        go-version: [1.19.x, 1.20.x]
        platform: [ubuntu-latest, macos-latest]
    name: tests
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - run: |
          go install github.com/mfridman/tparse@latest
          go test -v -race -cover -json ./... | $(go env GOPATH)/bin/tparse -all
      - run: |
          go install
          mkdir hugo
          cp internal/runner/testdata/hugo_0_53_go.mod hugo/go.mod
          cd hugo
          go list -u -m -json all | $(go env GOPATH)/bin/go-mod-outdated
  coverage:
    strategy:
      matrix:
        go-version: [1.20.x]
        platform: [ubuntu-latest]
    name: coverage
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - run: |
          go test -v -race -cover -coverprofile=coverage.txt -covermode=atomic ./...
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage.txt
          flags: unittests
          name: codecov-umbrella
